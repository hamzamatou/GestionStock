@model IEnumerable<WebApplication8.Models.Materiel>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
    ViewData["Title"] = "View";
}

<h1>Liste des Matériaux</h1>
<div class="d-flex justify-content-end mb-3">
    <form class="d-flex" method="get" asp-action="Search">
        <input class="form-control form-control-sm" type="search" name="searchTerm" placeholder="Rechercher..." aria-label="Search">
        <button class="btn btn-outline-success btn-sm" type="submit">
            <i class="fas fa-search"></i>
        </button>
    </form>
</div>
@if (!Model.Any())
{
    <div class="alert alert-info" role="alert">
        Aucun Materiel trouvé.
    </div>
}
else
{
    <div id="printableArea">
        <h2 id="printTitle" style="display: none;">Liste des Matériauxs</h2>
        <table class="table" id="materielTable">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.DateAffectation)</th>
                    <th>Model</th>
                    <th>@Html.DisplayNameFor(model => model.Type)</th>
                    <th>@Html.DisplayNameFor(model => model.Etat)</th>
                    <th>@Html.DisplayNameFor(model => model.SystemExp)</th>
                    <th>@Html.DisplayNameFor(model => model.disponibilite)</th>
                    <th id="action" style="display:block;">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.DateAffectation)</td>
                        <td>@Html.DisplayFor(modelItem => item.Description)</td>
                        <td>@Html.DisplayFor(modelItem => item.Type)</td>
                        <td>
                            @if (item.Etat == 1)
                            {
                                <span>En Marche</span>
                            }
                            else
                            {
                                <span>En Panne</span>
                            }
                        </td>
                        <td>@Html.DisplayFor(modelItem => item.SystemExp)</td>
                        <td>
                            @if (item.disponibilite == 1)
                            {
                                <span>Disponible</span>
                            }
                            else if (item.disponibilite == 0)
                            {
                                <span>Non Disponible</span>
                            }
                        </td>
                        <td class="d-flex flex-row justify-content-around">
                            <a asp-action="Edit" asp-route-id="@item.IdMat" asp-controller="Materiel" class="btn btn-primary">Modifier</a>
                            <a asp-action="Details" asp-route-id="@item.IdMat" asp-controller="Materiel" class="btn btn-warning">Détails</a>
                            <form asp-action="Delete" method="post" style="display:inline;">
                                <input type="hidden" name="id" value="@item.IdMat" />
                                <button type="submit" value="Delete" class="btn btn-danger">Supprimer</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <button onclick="printTable()" class="btn btn-secondary">Imprimer</button>
    </div>

    <script>
        function printTable() {
            const originalContents = document.body.innerHTML;
            const printTitle = document.getElementById("printTitle");
            const actionColumn = document.getElementById("action");

            actionColumn.style.display = "none";
            printTitle.style.display = "block";

            const buttons = document.querySelectorAll("button");
            const links = document.querySelectorAll("a");
            const buttonStates = [];
            const linkStates = [];

            buttons.forEach((button, index) => {
                buttonStates[index] = button.style.display;
                button.style.display = "none";
            });

            links.forEach((link, index) => {
                linkStates[index] = link.style.display;
                link.style.display = "none";
            });

            const printContents = document.getElementById("printableArea").innerHTML;
            document.body.innerHTML = printContents;
            window.print();
            document.body.innerHTML = originalContents;

            buttons.forEach((button, index) => {
                button.style.display = buttonStates[index];
            });

            links.forEach((link, index) => {
                link.style.display = linkStates[index];
            });

            printTitle.style.display = "none";
            actionColumn.style.display = "block";
        }
    </script>
}
