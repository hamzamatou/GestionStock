// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication8.Services;

namespace WebApplication8.Migrations
{
    [DbContext(typeof(AsteelDBcontext))]
    [Migration("20250116194619_testtablefor")]
    partial class testtablefor
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication8.Models.Affectation", b =>
                {
                    b.Property<string>("IdUserAffecting")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IdEmpAffected")
                        .HasColumnType("int");

                    b.Property<string>("IdMat")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateAffectation")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeAffectation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUserAffecting", "IdEmpAffected", "IdMat");

                    b.HasIndex("IdEmpAffected");

                    b.HasIndex("IdMat");

                    b.ToTable("Affectation");
                });

            modelBuilder.Entity("WebApplication8.Models.Employe", b =>
                {
                    b.Property<int>("IdEmp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEmp");

                    b.ToTable("Employe");
                });

            modelBuilder.Entity("WebApplication8.Models.Fournisseur", b =>
                {
                    b.Property<string>("CodeFiscal")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Adresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pays")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Principale")
                        .HasColumnType("int");

                    b.Property<int>("Statut")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodeFiscal");

                    b.ToTable("Fournisseur");
                });

            modelBuilder.Entity("WebApplication8.Models.FrsMat", b =>
                {
                    b.Property<string>("IdMateriel")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CodeFournisseur")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("PrixU")
                        .HasColumnType("float");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.HasKey("IdMateriel", "CodeFournisseur");

                    b.HasIndex("CodeFournisseur");

                    b.ToTable("FrsMat");
                });

            modelBuilder.Entity("WebApplication8.Models.Materiel", b =>
                {
                    b.Property<string>("IdMat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Categorie")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateAffectation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Etat")
                        .HasColumnType("int");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.Property<string>("SystemExp")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMat");

                    b.ToTable("Materiel");
                });

            modelBuilder.Entity("WebApplication8.Models.User", b =>
                {
                    b.Property<string>("IdUser")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IdEmp")
                        .HasColumnType("int");

                    b.Property<string>("Pwd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUser");

                    b.HasIndex("IdEmp");

                    b.ToTable("User");
                });

            modelBuilder.Entity("WebApplication8.Models.Affectation", b =>
                {
                    b.HasOne("WebApplication8.Models.Employe", "EmpAffected")
                        .WithMany("relations")
                        .HasForeignKey("IdEmpAffected")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication8.Models.Materiel", "Materiel")
                        .WithMany("Affectations")
                        .HasForeignKey("IdMat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication8.Models.User", "UserAffecting")
                        .WithMany("Affectations")
                        .HasForeignKey("IdUserAffecting")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmpAffected");

                    b.Navigation("Materiel");

                    b.Navigation("UserAffecting");
                });

            modelBuilder.Entity("WebApplication8.Models.FrsMat", b =>
                {
                    b.HasOne("WebApplication8.Models.Fournisseur", "Fournisseur")
                        .WithMany("FrsMats")
                        .HasForeignKey("CodeFournisseur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication8.Models.Materiel", "Materiel")
                        .WithMany("FrsMats")
                        .HasForeignKey("IdMateriel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fournisseur");

                    b.Navigation("Materiel");
                });

            modelBuilder.Entity("WebApplication8.Models.User", b =>
                {
                    b.HasOne("WebApplication8.Models.Employe", "Employe")
                        .WithMany("Users")
                        .HasForeignKey("IdEmp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employe");
                });

            modelBuilder.Entity("WebApplication8.Models.Employe", b =>
                {
                    b.Navigation("relations");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("WebApplication8.Models.Fournisseur", b =>
                {
                    b.Navigation("FrsMats");
                });

            modelBuilder.Entity("WebApplication8.Models.Materiel", b =>
                {
                    b.Navigation("Affectations");

                    b.Navigation("FrsMats");
                });

            modelBuilder.Entity("WebApplication8.Models.User", b =>
                {
                    b.Navigation("Affectations");
                });
#pragma warning restore 612, 618
        }
    }
}
